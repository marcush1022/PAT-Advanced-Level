/********************************************************************************/
题目描述
At the beginning of every day, the first person who signs in the computer room
will unlock the door, and the last one who signs out will lock the door.  Given
the records of signing in's and out's, you are supposed to find the ones who have
unlocked and locked the door on that day.

输入描述:
Each input file contains one test case. Each case contains the records for one day. 
The case starts with a positive integer M, which is the total number of records, 
followed by M lines, each in the format:

ID_number Sign_in_time Sign_out_time

where times are given in the format HH:MM:SS, and ID number is a string with no 
more than 15 characters.


输出描述:
For each test case, output in one line the ID numbers of the persons who have 
unlocked and locked the door on that day.  The two ID numbers must be separated 
by one space.
Note:  It is guaranteed that the records are consistent.  That is, the sign in 
time must be earlier than the sign out time for each person, and there are no 
two persons sign in or out at the same moment.

输入例子:
3
CS301111 15:30:28 17:00:10
SC3021234 08:00:00 11:25:25
CS301133 21:45:00 21:58:40

输出例子:
SC3021234 CS301133

Note: 在读入时记录下最早minTime和最晚maxTime和unlockID, lockID即可.
/********************************************************************************/

#include <iostream>
#include <cstdio>
#include <string>
#include <vector>
#include <limits.h>
 
using namespace std;
 
void getInAndOut()
{
    int n, maxTime=INT_MIN, minTime=INT_MAX;
    cin>>n;
    string unlockID, lockID;
 
    for(int i=0; i<n; i++)
    {
        string id;
        cin>>id;
        int h1, m1, s1, h2, m2, s2;
        scanf("%d:%d:%d %d:%d:%d", &h1, &m1, &s1, &h2, &m2, &s2);
        int tmp1=3600*h1+60*m1+s1;
        int tmp2=3600*h2+60*m2+s2;
        if(tmp1<minTime)
        {
            minTime=tmp1;
            unlockID=id;
        }
        if(tmp2>maxTime)
        {
            maxTime=tmp2;
            lockID=id;
        }
         
    }
    cout<<unlockID<<" "<<lockID;
}
 
 
int main()
{
    getInAndOut();
    return 0;
}
